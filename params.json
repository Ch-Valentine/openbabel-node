{"name":"Openbabel-node","tagline":"OpenBabel Bindings for Node.js","body":"**Open Babel** Binding for Node.js\r\n\r\nOpen Babel is a chemical toolbox designed to speak the many languages of chemical data written in C++. Now you can use the OpenBabel features in node.js !\r\n\r\n## Installation\r\nFirst of all you should install `openbabel` with header files.\r\n\r\n    sudo apt-get install libopenbabel-dev\r\n\r\nThen you can easily install this package using `npm`\r\n\r\n    npm install openbabel\r\n\r\n## Usage\r\n\r\nUse the `openbabel` module in your project.\r\n\r\n    var ob = require('openbabel');\r\n\r\n## Examples\r\n\r\n### Read chemical file formats\r\n\r\nCreate an instance of `ob.Conversion` :\r\n\r\n    var conversion = new ob.Conversion();\r\n    var mol = conversion.setInFormat('smiles').read('C1CCCC1');\r\n    console.log(mol.atomsCount);\r\n    \r\nAnd you can use `fs` to read chimcal data from files :\r\n    \r\n    var fs = require('fs');\r\n    \r\n    var data = readFileSync('methane.smiles');\r\n    var conversion = new ob.Conversion();\r\n    var mol = conversion.setInFormat('smiles').read(data);\r\n    console.log(mol.atomsCount);\r\n    \r\n### Write chemical file formats\r\n\r\nUse an `ob.Conversion` instance :\r\n\r\n    var str = conversion.setOutFormat('mol').write(mol);\r\n    console.log(str);\r\n    \r\nAnd also you can export it as a file :\r\n\r\n    var str = conversion.setOutFormat('mol').write();\r\n    fs.writeFileSync('methane.mol', str);\r\n","google":"UA-42543494-2","note":"Don't delete this file! It's used internally to help with page regeneration."}